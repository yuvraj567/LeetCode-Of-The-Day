class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();

        vector<vector<int>> dp(m, vector<int>(n, 1e9));

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (i == 0 && j == 0)
                    dp[i][j] = grid[0][0];

                else {
                    int ans = grid[i][j];
                    if (i - 1 >= 0) dp[i][j] = ans + dp[i-1][j];
                    if (j - 1 >= 0) dp[i][j] = min(dp[i][j], ans + dp[i][j-1]);
                }
            }
        }
        return dp[m - 1][n - 1];
    }
};
