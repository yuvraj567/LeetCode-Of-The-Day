class Solution {
public:
    void recursion(int ind, vector<int>& nums, int& global_max, int local_max, int& global_max_counter) {
        if (ind == nums.size()) {
            if (local_max > global_max) {
                global_max = local_max;
                global_max_counter = 1;
            } else if (local_max == global_max) {
                global_max_counter++;
            }
            return;
        }

        recursion(ind + 1, nums, global_max, local_max | nums[ind], global_max_counter);
        recursion(ind + 1, nums, global_max, local_max, global_max_counter);
    }

    int countMaxOrSubsets(vector<int>& nums) {
        int global_max = 0;
        int local_max = 0;
        int global_max_counter = 0;

        for (int num : nums) {
            global_max |= num;
        }

        recursion(0, nums, global_max, local_max, global_max_counter);
        return global_max_counter;
    }
};
